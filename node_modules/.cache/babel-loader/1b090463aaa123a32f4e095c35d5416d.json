{"ast":null,"code":"var _jsxFileName = \"/Users/marshall/Projects/horoscope_predictor/horoscope_predictor/src/components/Test.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const authEndpoint = 'https://accounts.spotify.com/authorize'; // Replace with your app's client ID, redirect URI and desired scopes\n\nconst clientId = \"52988c4410724bea87391b7ed36f4c7f\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"];\nconst hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n  if (item) {\n    var parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n  }\n\n  return initial;\n}, {});\nwindow.location.hash = \"\";\n\nconst Test = () => {\n  _s();\n\n  //state \n  let token = null; //on load\n\n  useEffect(() => {\n    let _token = hash.access_token;\n\n    if (_token) {\n      token = _token;\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: token ? null // Spotify Player Will Go Here In the Next Step \n    : /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"btn btn--loginApp-link\",\n      href: `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n      children: \"Login to Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Test, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/marshall/Projects/horoscope_predictor/horoscope_predictor/src/components/Test.jsx"],"names":["React","useState","useEffect","authEndpoint","clientId","redirectUri","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","Test","token","_token","access_token","join"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,OAAO,MAAMC,YAAY,GAAG,wCAArB,C,CAEP;;AACA,MAAMC,QAAQ,GAAG,kCAAjB;AACA,MAAMC,WAAW,GAAG,uBAApB;AACA,MAAMC,MAAM,GAAG,CACb,6BADa,EAEb,0BAFa,CAAf;AAKA,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CACVG,SADU,CACA,CADA,EAEVC,KAFU,CAEJ,GAFI,EAGVC,MAHU,CAGH,UAASC,OAAT,EAAkBC,IAAlB,EAAwB;AAC9B,MAAIA,IAAJ,EAAU;AACR,QAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAE,IAAAA,OAAO,CAACE,KAAK,CAAC,CAAD,CAAN,CAAP,GAAoBC,kBAAkB,CAACD,KAAK,CAAC,CAAD,CAAN,CAAtC;AACD;;AACD,SAAOF,OAAP;AACD,CATU,EASR,EATQ,CAAb;AAUAL,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;;AAGA,MAAMU,IAAI,GAAG,MAAM;AAAA;;AACf;AACA,MAAIC,KAAK,GAAG,IAAZ,CAFe,CAIf;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,MAAM,GAAGZ,IAAI,CAACa,YAAlB;;AACA,QAAID,MAAJ,EAAW;AACPD,MAAAA,KAAK,GAAGC,MAAR;AACH;AACJ,GALQ,EAKN,EALM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACKD,KAAK,GACF,IADE,CACG;AADH,mBAEA;AACF,MAAA,SAAS,EAAC,wBADR;AAEF,MAAA,IAAI,EAAG,GAAEf,YAAa,aAAYC,QAAS,iBAAgBC,WAAY,UAASC,MAAM,CAACe,IAAP,CAAY,KAAZ,CAAmB,uCAFjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxBD;;GAAMJ,I;;KAAAA,I;AA0BN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\n\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId = \"52988c4410724bea87391b7ed36f4c7f\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n];\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\n\nconst Test = () => {\n    //state \n    let token = null;\n\n    //on load\n    useEffect(() => {\n        let _token = hash.access_token;\n        if (_token){\n            token = _token;\n        }\n    }, [])\n\n    return (\n        <div className=\"App\">\n            {token ? \n                null // Spotify Player Will Go Here In the Next Step \n                : <a\n                className=\"btn btn--loginApp-link\"\n                href={`${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n              >\n                Login to Spotify\n              </a> }\n        </div>\n    );\n}\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}