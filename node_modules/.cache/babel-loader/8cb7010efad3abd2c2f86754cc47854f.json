{"ast":null,"code":"var _jsxFileName = \"/Users/marshall/Projects/horoscope_predictor/horoscope_predictor/src/components/Test.jsx\";\nimport React from 'react';\nimport Hash from \"./hash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const authEndpoint = 'https://accounts.spotify.com/authorize'; // Replace with your app's client ID, redirect URI and desired scopes\n\nconst clientId = \"YOUR_CLIENT_ID_GOES_HERE\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"]; // Get the hash of the url\n\nconst hash = window.location.Hash.substring(1).split(\"&\").reduce(function (initial, item) {\n  if (item) {\n    var parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n  }\n\n  return initial;\n}, {});\nwindow.location.hash = \"\";\n\nconst Test = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/marshall/Projects/horoscope_predictor/horoscope_predictor/src/components/Test.jsx"],"names":["React","Hash","authEndpoint","clientId","redirectUri","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","Test"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,OAAO,MAAMC,YAAY,GAAG,wCAArB,C,CAEP;;AACA,MAAMC,QAAQ,GAAG,0BAAjB;AACA,MAAMC,WAAW,GAAG,uBAApB;AACA,MAAMC,MAAM,GAAG,CACb,6BADa,EAEb,0BAFa,CAAf,C,CAKA;;AACA,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBP,IAAhB,CACVQ,SADU,CACA,CADA,EAEVC,KAFU,CAEJ,GAFI,EAGVC,MAHU,CAGH,UAASC,OAAT,EAAkBC,IAAlB,EAAwB;AAC9B,MAAIA,IAAJ,EAAU;AACR,QAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAE,IAAAA,OAAO,CAACE,KAAK,CAAC,CAAD,CAAN,CAAP,GAAoBC,kBAAkB,CAACD,KAAK,CAAC,CAAD,CAAN,CAAtC;AACD;;AACD,SAAOF,OAAP;AACD,CATU,EASR,EATQ,CAAb;AASSL,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;;AAGT,MAAMU,IAAI,GAAG,MAAM;AACf,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;KAAMA,I;AAQN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport Hash from \"./hash\";\n\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\n\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId = \"YOUR_CLIENT_ID_GOES_HERE\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n];\n\n// Get the hash of the url\nconst hash = window.location.Hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});window.location.hash = \"\";\n\n\nconst Test = () => {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}