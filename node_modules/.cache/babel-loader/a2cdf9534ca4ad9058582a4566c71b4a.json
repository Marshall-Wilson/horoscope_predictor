{"ast":null,"code":"var _jsxFileName = \"/Users/marshall/Projects/horoscope_predictor/horoscope_predictor/src/components/Test.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as $ from \"jquery\";\nimport Player from \"./Player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const authEndpoint = 'https://accounts.spotify.com/authorize'; // Replace with your app's client ID, redirect URI and desired scopes\n\nconst clientId = \"52988c4410724bea87391b7ed36f4c7f\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"];\nconst hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n  if (item) {\n    var parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n  }\n\n  return initial;\n}, {});\nwindow.location.hash = \"\";\n\nconst Test = () => {\n  _s();\n\n  //state \n  const [token, setToken] = useState(null);\n  const [item, setItem] = useState({\n    album: {\n      images: [{\n        url: \"\"\n      }]\n    },\n    name: \"\",\n    artists: [{\n      name: \"\"\n    }],\n    duration_ms: 0\n  });\n  const [isPlaying, setIsPlaying] = useState(\"Paused\");\n  const [progressMS, setProgressMS] = useState(0);\n\n  const getCurrentlyPlaying = token => {\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        setItem(data.item);\n        setIsPlaying(data.is_playing);\n        setProgressMS(data.progress_ms);\n      }\n    });\n  }; //on load\n\n\n  useEffect(() => {\n    let _token = hash.access_token;\n\n    if (_token) {\n      token = _token;\n    }\n\n    getCurrentlyPlaying(_token);\n  }, []);\n\n  const tick = () => {\n    if (token) {\n      getCurrentlyPlaying(token);\n    }\n  };\n\n  let interval = setInterval(() => tick(), 5000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {\n      item: item,\n      isPlaying: isPlaying,\n      progressMS: progressMS\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"btn btn--loginApp-link\",\n      href: `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n      children: \"Login to Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Test, \"odtjZEItjp2FPARDHi2OVxwyr+I=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/marshall/Projects/horoscope_predictor/horoscope_predictor/src/components/Test.jsx"],"names":["React","useState","useEffect","$","Player","authEndpoint","clientId","redirectUri","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","Test","token","setToken","setItem","album","images","url","name","artists","duration_ms","isPlaying","setIsPlaying","progressMS","setProgressMS","getCurrentlyPlaying","ajax","type","beforeSend","xhr","setRequestHeader","success","data","is_playing","progress_ms","_token","access_token","tick","interval","setInterval","join"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport * as $ from \"jquery\";\nimport Player from \"./Player\"\n\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\n\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId = \"52988c4410724bea87391b7ed36f4c7f\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n];\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\n\nconst Test = () => {\n    //state \n    const [token, setToken] = useState(null);\n    const [item, setItem] = useState({\n        album: {\n            images: [{url: \"\"}]\n        },\n        name: \"\",\n        artists: [{name: \"\"}],\n        duration_ms: 0\n    });\n    const [isPlaying, setIsPlaying] = useState(\"Paused\");\n    const [progressMS, setProgressMS] = useState(0);\n\n\n\n    const getCurrentlyPlaying = (token) => {\n        $.ajax({\n            url: \"https://api.spotify.com/v1/me/player\",\n            type: \"GET\",\n            beforeSend: (xhr) => {\n                xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n            },\n            success: (data) => {\n                setItem(data.item);\n                setIsPlaying(data.is_playing);\n                setProgressMS(data.progress_ms);\n            }\n        })\n    }\n\n    //on load\n    useEffect(() => {\n        let _token = hash.access_token;\n        if (_token){\n            token = _token;\n        }\n        getCurrentlyPlaying(_token);\n    }, [])\n\n    const tick = () => {\n        if (token) {\n            getCurrentlyPlaying(token);\n        }\n    }\n\n    let interval = setInterval(() => tick(), 5000);\n\n    return (\n        <div className=\"App\">\n            {token ? \n                 <Player\n                 item={item}\n                 isPlaying={isPlaying}\n                 progressMS={progressMS}\n               />\n                : <a\n                className=\"btn btn--loginApp-link\"\n                href={`${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n              >\n                Login to Spotify\n              </a> }\n        </div>\n    );\n}\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}